#! /usr/bin/env python

import logging
import os
import multiprocessing
import subprocess
import sys

from lab.experiment import get_run_dir
from lab import tools

tools.configure_logging()

SHUFFLED_TASK_IDS = [221, 185, 2, 78, 207, 62, 182, 18, 75, 53, 156, 3, 128, 213, 47, 65, 149, 66, 140, 1, 190, 89, 7, 95, 91, 94, 9, 161, 54, 8, 126, 19, 187, 215, 191, 45, 145, 116, 10, 195, 192, 123, 115, 67, 224, 77, 41, 109, 59, 147, 199, 154, 119, 97, 6, 153, 122, 12, 165, 73, 143, 180, 114, 68, 64, 130, 35, 4, 200, 146, 159, 48, 201, 5, 61, 164, 155, 11, 148, 135, 87, 172, 16, 46, 218, 111, 211, 193, 80, 83, 17, 210, 76, 60, 216, 25, 71, 157, 90, 38, 186, 178, 204, 179, 232, 27, 26, 99, 43, 69, 174, 102, 124, 32, 49, 202, 163, 181, 132, 40, 29, 81, 63, 24, 225, 28, 120, 222, 229, 151, 36, 205, 176, 129, 167, 144, 20, 22, 105, 136, 74, 166, 14, 110, 188, 108, 57, 160, 84, 88, 37, 138, 13, 139, 104, 34, 85, 33, 152, 92, 96, 31, 208, 184, 142, 168, 175, 98, 51, 118, 127, 55, 189, 23, 113, 30, 206, 150, 93, 100, 214, 70, 162, 42, 141, 219, 82, 134, 50, 112, 183, 103, 21, 137, 117, 56, 226, 227, 101, 133, 203, 158, 170, 196, 52, 125, 121, 44, 231, 15, 58, 220, 209, 131, 197, 194, 39, 107, 177, 86, 72, 171, 198, 106, 169, 223, 79, 230, 228, 212, 173, 217]

# Make sure we're in the experiment directory.
os.chdir(os.path.dirname(os.path.abspath(__file__)))


def get_run_id(task_id):
    return SHUFFLED_TASK_IDS[task_id - 1]


def process_task(task_id):
    run_id = get_run_id(task_id)
    run_dir = get_run_dir(run_id)
    error = False
    driver_log_file = os.path.join(run_dir, "driver.log")

    if os.path.exists(driver_log_file):
        logging.info(f"The run in {run_dir} has already been started --> skip it")
        return False

    with open(driver_log_file, "w") as driver_log:
        with open(os.path.join(run_dir, "driver.err"), "w") as driver_err:
            logging.info(f"Starting run {run_id} (TASK_ID {task_id}) in {run_dir}")
            try:
                subprocess.check_call(
                    [tools.get_python_executable(), "run"],
                    cwd=run_dir, stdout=driver_log, stderr=driver_err)
            except subprocess.CalledProcessError:
                error = True

    # driver.log always has content for a successful run, so we never delete it.
    if os.path.getsize(driver_err.name) == 0:
        os.remove(driver_err.name)
    else:
        error = True

    return error


def main():
    pool = multiprocessing.Pool(processes=2)
    num_tasks = len(SHUFFLED_TASK_IDS)
    result = pool.map_async(process_task, range(1, num_tasks + 1))
    try:
        # Use "timeout" to fix passing KeyboardInterrupts from children
        # (see https://stackoverflow.com/questions/1408356).
        result.wait(timeout=99999)
    except KeyboardInterrupt:
        logging.warning("Main script interrupted")
        pool.terminate()
    finally:
        pool.close()
        logging.info("Joining pool processes")
        pool.join()

    if any(result.get()):
        sys.exit("Error: At least one run failed.")


if __name__ == "__main__":
    main()
