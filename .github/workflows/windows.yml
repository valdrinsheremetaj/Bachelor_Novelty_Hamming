---
name: Windows

on: [push, pull_request]

env:
  ARCH: "x64"
  VC2019: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\Build\\vcvarsall.bat"
  VC2017: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Auxiliary\\Build\\vcvarsall.bat"

jobs:
  test:
    name: Compile and test planner
    timeout-minutes: 60
    runs-on: ${{ matrix.windows-version }}
    strategy:
      matrix:
        windows-version: [windows-2016, windows-2019]
        python-version: [3.6]
    steps:
      - name: Clone repository
        uses: actions/checkout@master

      - name: Install python
        uses: actions/setup-python@master
        with:
          python-version: ${{ matrix.python-version }}

      - name: Compile planner
        shell: cmd
        env:
          CC: cl
          CXX: cl
        run: |
          IF "${{ matrix.windows-version }}" == "windows-2016" (
            "${{ env.VC2017 }}" ${{ env.ARCH }} & python build.py debug
            "${{ env.VC2017 }}" ${{ env.ARCH }} & python build.py release
          )
          IF "${{ matrix.windows-version }}" == "windows-2019" (
            "${{ env.VC2019 }}" ${{ env.ARCH }} & python build.py debug
            "${{ env.VC2019 }}" ${{ env.ARCH }} & python build.py release
          )

      - name: Install tox
        run: |
          pip3 install tox

      - name: Run translator and search tests
        shell: cmd
        env:
          CC: cl
          CXX: cl
        # We do not run driver tests here because that would require
        # VAL to be installed, which currently cannot be easily done
        # on Windows for the version of VAL we use. When the maintainers
        # of VAL fix the latest version to accept plans without time
        # steps, we hope to be able to install VAL natively on Windows.
        run: |
          cd misc/
          IF "${{ matrix.windows-version }}" == "windows-2016" (
            "${{ env.VC2017 }}" ${{ env.ARCH }} & tox -e translator,search
          )
          IF "${{ matrix.windows-version }}" == "windows-2019" (
            "${{ env.VC2019 }}" ${{ env.ARCH }} & tox -e translator,search
          )

...
