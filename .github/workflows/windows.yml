---
name: windows

on: [push, pull_request]

env:
  ARCH: "x64"
  VC2019: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\Build\\vcvarsall.bat"
  VC2017: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Auxiliary\\Build\\vcvarsall.bat"

jobs:
  compile: # name of the job. Jobs run in parallel unless specified otherwise.
    name: compile
    timeout-minutes: 60
    runs-on: ${{ matrix.windows-version }}
    strategy:
      matrix:
        windows-version: [windows-2016, windows-2019]
        python-version: [3.6]
        build-version: [release, debug]
    steps: # each - is a new sequentially run step
      - name: clone-repo
        uses: actions/checkout@master

      - name: setup-python
        uses: actions/setup-python@master
        with:
          python-version: ${{ matrix.python-version }}

      - name: compile
        shell: cmd
        env:
          CC: cl
          CXX: cl
        run: |
          IF "${{ matrix.windows-version }}" == "windows-2016" (
            "${{ env.VC2017 }}" ${{ env.ARCH }} & python build.py ${{ matrix.build-version }}
          )
          IF "${{ matrix.windows-version }}" == "windows-2019" (
            "${{ env.VC2019 }}" ${{ env.ARCH }} & python build.py ${{ matrix.build-version }}
          )

      - name: upload-planner
        uses: actions/upload-artifact@master
        with:
          name: compiled-planner-${{ matrix.windows-version }}-${{ matrix.build-version }}
          path: builds/


  tests:
    name: test
    runs-on: ${{ matrix.windows-version }}
    needs: compile
    strategy:
      matrix:
        windows-version: [windows-2016, windows-2019]
        python-version: [3.6]
    steps:
      - name: clone-repo
        uses: actions/checkout@master

      - name: setup-python
        uses: actions/setup-python@master
        with:
          python-version: ${{ matrix.python-version }}

      - name: setup-dependencies
        run: |
          pip3 install tox
          mkdir builds

      - name: download-debug
        uses: actions/download-artifact@master
        with:
          name: compiled-planner-${{ matrix.windows-version }}-debug
          path: builds/

      - name: download-release
        uses: actions/download-artifact@master
        with:
          name: compiled-planner-${{ matrix.windows-version }}-release
          path: builds/

      - name: test
        shell: cmd
        env:
          CC: cl
          CXX: cl
        # We do not run py tests here because that would require VAL
        # to be installed.
        run: |
          cd misc/
          IF "${{ matrix.windows-version }}" == "windows-2016" (
            "${{ env.VC2017 }}" ${{ env.ARCH }} & tox -e driver,translator,search
          )
          IF "${{ matrix.windows-version }}" == "windows-2019" (
            "${{ env.VC2019 }}" ${{ env.ARCH }} & tox -e driver,translator,search
          )

...
